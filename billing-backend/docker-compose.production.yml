version: '3.8'

services:
  subscription-service:
    image: billing-backend/subscription-service:${IMAGE_TAG:-latest}
    ports:
      - "8001:8000"
    env_file:
      - ./config/environments/base.env
      - ./config/environments/production.env
    environment:
      # Production database and redis should be external
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - billing-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  subscription-worker:
    image: billing-backend/subscription-service:${IMAGE_TAG:-latest}
    env_file:
      - ./config/environments/base.env
      - ./config/environments/production.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - billing-network
    command: celery -A app.workers.celery_app worker --loglevel=warning --queues=subscription_tasks,usage_tasks,webhook_tasks,queue_tasks
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  subscription-beat:
    image: billing-backend/subscription-service:${IMAGE_TAG:-latest}
    env_file:
      - ./config/environments/base.env
      - ./config/environments/production.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - billing-network
    command: celery -A app.workers.celery_app beat --loglevel=warning
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  payment-service:
    image: billing-backend/payment-service:${IMAGE_TAG:-latest}
    ports:
      - "8002:8000"
    env_file:
      - ./config/environments/base.env
      - ./config/environments/production.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - billing-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  payment-worker:
    image: billing-backend/payment-service:${IMAGE_TAG:-latest}
    env_file:
      - ./config/environments/base.env
      - ./config/environments/production.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - billing-network
    command: celery -A app.workers.celery_app worker --loglevel=warning --queues=payment_tasks
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

networks:
  billing-network:
    external: true 